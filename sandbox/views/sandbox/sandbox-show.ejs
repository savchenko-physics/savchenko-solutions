<%- include('../partials/header') %>

<style>
  /* Additional custom styles for a modern look */
  .solution-card {
    border-radius: 0.5rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  }
  .solution-title {
    font-weight: 600;
  }
  .solution-info {
    font-size: 0.9rem;
    color: #6c757d;
  }
  .solution-info span {
    margin-right: 1rem;
  }
  .solution-images img {
    transition: transform 0.2s ease;
  }
  .solution-images img:hover {
    transform: scale(1.02);
  }
  #previewModalImage.zoomed {
    cursor: zoom-out;
  }
  .nav-btn {
    background-color: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(4px);
    color: white;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    border: none;
  }

  .nav-btn:hover {
    background-color: rgba(255, 255, 255, 0.3);
    color: white;
  }

  .nav-btn i {
    line-height: 1;
  }
</style>

<div class="container py-4">
  <!-- Solution Card -->
  <div class="card solution-card mb-4">
    <div class="card-body">
      <h2 class="card-title solution-title mb-3"><%= solution.title %></h2>
      <div class="solution-info mb-4">
        <span><strong>By:</strong> <%= solution.author || 'Anonymous' %> (#<%= solution.user_id || 'N/A' %>)</span>
        <span><strong>Subject:</strong> <%= solution.subject %></span>
        <span><strong>Difficulty:</strong> <%= solution.difficulty %></span>
        <span><strong>Status:</strong> <%= solution.status %></span>
        <span><strong>Posted:</strong> <%= solution.created_at %></span>
      </div>

      <h5 class="mb-3">Solution Content</h5>

      <% if (solution.method === 'latex') { %>
        <!-- Display LaTeX content if method is latex -->
        <p><%= solution.content %></p>
      <% } %>

      <!-- Display uploaded images -->
      <% if (solution.files && solution.files.length > 0) { %>
        <div class="solution-images d-flex flex-wrap gap-3 mb-3">
          <% solution.files.forEach((file, index) => { %>
            <div class="position-relative">
              <img 
                src="/uploads/<%= file %>" 
                alt="Solution image <%= index + 1 %>"
                class="img-thumbnail cursor-pointer"
                style="height: 200px; object-fit: contain;"
                onclick="showImagePreview(this)"
              />
            </div>
          <% }); %>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Voting Card -->
  <div class="card mb-4">
    <div class="card-body d-flex flex-column flex-md-row align-items-md-center gap-3">
      <form action="/sandbox/<%= solution.id %>/vote" method="POST" class="d-flex gap-2">
        <button
          type="submit"
          name="vote_value"
          value="1"
          class="btn <%= userVote === 1 ? 'btn-success' : 'btn-outline-success' %>"
          <%= !locals.userId ? 'disabled' : '' %>
        >
          <i class="bi bi-hand-thumbs-up"></i>
          <%= solution.upvotes %>
        </button>
        <button
          type="submit"
          name="vote_value"
          value="-1"
          class="btn <%= userVote === -1 ? 'btn-danger' : 'btn-outline-danger' %>"
          <%= !locals.userId ? 'disabled' : '' %>
        >
          <i class="bi bi-hand-thumbs-down"></i>
          <%= solution.downvotes %>
        </button>
      </form>
      <span class="ms-md-3">
        Total score: <%= solution.upvotes - solution.downvotes %>
      </span>
      <% if (!locals.userId) { %>
        <small class="text-muted ms-md-auto">Please log in to vote</small>
      <% } %>
    </div>
  </div>

  <!-- Comments Section -->
  <div class="card mb-4">
    <div class="card-body">
      <h3 class="mb-3">Comments</h3>
      <% if (comments.length > 0) { %>
        <ul class="list-group list-group-flush">
          <% comments.forEach(comment => { %>
            <li class="list-group-item">
              <div>
                <strong><%= comment.author || 'Anonymous' %></strong> said:
              </div>
              <p class="mb-2"><%= comment.comment_text %></p>
              <% if (comment.images && comment.images.length > 0) { %>
                <div class="d-flex flex-wrap gap-2 mb-2">
                  <% comment.images.forEach((image, index) => { %>
                    <img 
                      src="/uploads/<%= image %>" 
                      alt="Comment image <%= index + 1 %>"
                      class="img-thumbnail"
                      style="height: 100px; object-fit: contain; cursor: pointer;"
                      onclick="showImagePreview(this)"
                    />
                  <% }); %>
                </div>
              <% } %>
              <small class="text-muted"><%= comment.created_at %></small>
            </li>
          <% }); %>
        </ul>
      <% } else { %>
        <p class="text-muted">No comments yet.</p>
      <% } %>
    </div>
  </div>

  <!-- Add a Comment -->
  <div class="card mb-4">
    <div class="card-body">
      <h4>Add a Comment</h4>
      <form action="/sandbox/<%= solution.id %>/comment" method="POST" enctype="multipart/form-data">
        <div class="mb-3">
          <label for="comment_text" class="form-label">Comment</label>
          <textarea
            name="comment_text"
            id="comment_text"
            rows="3"
            class="form-control"
          ></textarea>
        </div>

        <div class="mb-3">
          <label for="comment_images" class="form-label">Images (optional)</label>
          <input
            type="file"
            name="comment_images"
            id="comment_images"
            class="form-control"
            accept="image/*"
            multiple
          />
        </div>

        <div class="mb-3">
          <label for="author" class="form-label">Author (optional)</label>
          <input
            type="text"
            name="author"
            id="author"
            class="form-control"
            placeholder="Your name or nickname"
          />
        </div>

        <button type="submit" class="btn btn-primary">Post Comment</button>
      </form>
    </div>
  </div>
</div>

<!-- Image Preview Modal -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content bg-dark">
      <div class="modal-body p-0 position-relative">
        <!-- Navigation buttons -->
        <button
          type="button"
          class="btn position-absolute top-50 start-0 translate-middle-y rounded-circle ms-4 nav-btn"
          id="prevImage"
        >
          <i class="bi bi-chevron-left fs-4"></i>
        </button>
        <button
          type="button"
          class="btn position-absolute top-50 end-0 translate-middle-y rounded-circle me-4 nav-btn"
          id="nextImage"
        >
          <i class="bi bi-chevron-right fs-4"></i>
        </button>

        <!-- Close button -->
        <button
          type="button"
          class="btn-close btn-close-white position-absolute top-0 end-0 m-3"
          data-bs-dismiss="modal"
        ></button>

        <!-- Updated image container -->
        <div class="text-center position-relative" style="height: 80vh;">
          <img
            id="previewModalImage"
            src=""
            alt="Preview"
            style="
              position: absolute;
              left: 50%;
              top: 50%;
              transform: translate(-50%, -50%);
              max-height: 90%;
              max-width: 90%;
              width: auto;
              height: auto;
              object-fit: contain;
              cursor: zoom-in;
            "
          >
        </div>

        <!-- Image counter -->
        <div
          class="position-absolute bottom-0 start-50 translate-middle-x mb-3 px-3 py-1 bg-dark bg-opacity-75 rounded-pill text-white"
        >
          <span id="imageCounter">1/1</span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const modal = new bootstrap.Modal(document.getElementById('imagePreviewModal'));
  const modalImage = document.getElementById('previewModalImage');
  const prevButton = document.getElementById('prevImage');
  const nextButton = document.getElementById('nextImage');
  const counter = document.getElementById('imageCounter');
  let currentIndex = 0;
  let images = [];

  // Gather all images in the correct order
  function updateImagesList() {
    const solutionImages = Array.from(document.querySelectorAll('.solution-images img'));
    const commentImages = Array.from(document.querySelectorAll('.list-group-item img'));
    images = [...solutionImages, ...commentImages];
    console.log('Updated images list:', images.length, 'images found');
  }

  // Show image preview
  window.showImagePreview = function(img) {
    updateImagesList();
    currentIndex = images.findIndex(image => image.src === img.src);
    console.log('Opening modal with image index:', currentIndex);
    updateImageDisplay();
    modal.show();
  };

  function updateImageDisplay() {
    console.log('Updating display to image index:', currentIndex);
    modalImage.src = images[currentIndex].src;
    modalImage.style.transform = 'translate(-50%, -50%) scale(1)';
    modalImage.classList.remove('zoomed');
    modalImage.style.cursor = 'zoom-in';
    updateNavigation();
  }

  function updateNavigation() {
    counter.textContent = `${currentIndex + 1}/${images.length}`;
    prevButton.style.display = images.length > 1 ? 'flex' : 'none';
    nextButton.style.display = images.length > 1 ? 'flex' : 'none';
    console.log('Navigation updated, buttons visibility:', prevButton.style.display);
  }

  // Navigation handlers with direct click handling
  prevButton.onclick = function(e) {
    e.stopPropagation();
    console.log('Previous button clicked');
    currentIndex = (currentIndex - 1 + images.length) % images.length;
    updateImageDisplay();
  };

  nextButton.onclick = function(e) {
    e.stopPropagation();
    console.log('Next button clicked');
    currentIndex = (currentIndex + 1) % images.length;
    updateImageDisplay();
  };

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (modal._element.classList.contains('show')) {
      if (e.key === 'ArrowLeft') {
        console.log('Left arrow pressed');
        prevButton.onclick(new Event('click'));
      }
      if (e.key === 'ArrowRight') {
        console.log('Right arrow pressed');
        nextButton.onclick(new Event('click'));
      }
      if (e.key === 'Escape') modal.hide();
    }
  });

  // Zoom toggle functionality
  modalImage.addEventListener('click', function() {
    if (this.classList.contains('zoomed')) {
      this.style.transform = 'translate(-50%, -50%) scale(1)';
      this.classList.remove('zoomed');
      this.style.cursor = 'zoom-in';
    } else {
      this.classList.add('zoomed');
      this.style.transform = 'translate(-50%, -50%) scale(1.5)';
      this.style.cursor = 'zoom-out';
    }
  });
});
</script>

<%- include('../partials/footer') %>
