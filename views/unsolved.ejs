<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= __('unsolved.title') %></title>
    
    <!-- Bootstrap 5 (via CDN) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <!-- Google Fonts: Roboto -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="/css/style.css">
    
    <style>
        .unsolved-list {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .chapter-section {
            margin-bottom: 20px;
        }
        .problem-link {
            display: inline-block;
            margin: 5px;
            padding: 5px 10px;
            background-color: #f0f0f0;
            border-radius: 4px;
            text-decoration: none;
            color: #333;
        }
        .problem-link:hover {
            background-color: #e0e0e0;
        }
        /* Add new style for problems that exist in other language */
        .problem-link.exists-other-lang {
            background-color: #e3f2fd;
            border: 1px solid #90caf9;
        }
        .problem-link.exists-other-lang:hover {
            background-color: #bbdefb;
        }
        .chapter-title {
            margin-top: 30px;
            color: #333;
        }
        .section-title {
            margin-top: 15px;
            color: #666;
            margin-right: auto;
            min-width: 200px;
            flex: 1;
        }
        .section-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-top: 15px;
            flex-wrap: wrap;
        }
        .progress-container {
            flex: 0 0 200px;
            height: 20px;
            background-color: #f44336;  /* Red for unsolved */
            border-radius: 10px;
            overflow: hidden;
            position: relative;
            display: flex;
        }
        .progress-bar-both {
            height: 100%;
            background-color: #4CAF50;  /* Green for original published solutions */
            transition: width 0.3s ease;
        }
        .progress-bar-current {
            height: 100%;
            background-color: #4CAF50;  /* Green for current language solutions */
            transition: width 0.3s ease;
        }
        .progress-bar-other {
            height: 100%;
            background-color: #2196F3;  /* Blue for other language only */
            transition: width 0.3s ease;
        }
        .completion-text {
            color: #666;
            font-size: 0.9em;
            flex: 0 0 auto;
            min-width: 60px;
            text-align: right;
        }

        /* Update navbar styles to be more modern and minimal */
        .navbar-custom {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            padding: 0.5rem 0;
            width: 100%;
        }

        .navbar-container {
            max-width: 1200px;  /* Increased from 800px */
            margin: 0 auto;
            padding: 0 15px;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .navbar-brand {
            color: #333 !important;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .navbar-brand img {
            width: 32px;
            height: auto;
        }

        .modern-search {
            width: 100%;
            background-color: #f8f9fa; /* Lighter background */
            border: 1px solid #e9ecef; /* Subtle border */
            color: #495057; /* Darker, more muted text color */
            padding: 0.35rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            height: 32px;
            line-height: 1;
        }

        .modern-search::placeholder {
            color: #adb5bd; /* Lighter placeholder text */
        }

        .language-switch {
            color: #333;
            text-decoration: none;
            font-weight: 500;
        }

        .footer-modern {
            background: linear-gradient(135deg, #343A40 0%, #495057 100%);
            color: #fff;
        }

        .footer-container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }

        /* Add/update search-related styles */
        .search {
            position: relative;
            width: 250px;  /* Reduced from 350px */
            transition: width 0.3s ease;
        }
        
        .search.active {
            width: 350px;  /* Reduced from 450px */
        }
        
        .search-results {
            position: absolute;
            top: 100%;
            left: 0;
            width: 100% !important; /* Match parent width exactly */
            background: #fff;
            border-radius: 8px;
            margin-top: 5px;
        }
        
        .search-results li {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 4px 8px !important; /* Reduced from 8px 12px */
            font-size: 0.875rem;
        }
        
        .search-results .result-snippet {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
            margin-top: 2px;
            font-size: 0.8125rem;  /* Added even smaller font size for snippets */
            color: #666;  /* Added muted color for better hierarchy */
        }
        
        @media (max-width: 991.98px) {
            .search {
                width: 100%; /* Full width on mobile */
            }
            .search-results {
                max-width: 100%; /* Full width on mobile */
            }
        }
        
        .pie-chart-container {
            width: 30px;
            height: 30px;
            flex: 0 0 auto;
        }
    </style>
</head>
<body class="bg-light">
    <!-- Top Navbar -->
    <nav class="navbar navbar-custom">
        <div class="navbar-container">
            <a class="navbar-brand" href="/">
                <img src="https://savchenkosolutions.com/img/book.png" alt="Savchenko Solutions" />
                Savchenko Solutions
            </a>

            <div class="d-flex align-items-center gap-3">
                <div class="search position-relative">
                    <input type="text" id="searchInput" class="form-control form-control-sm modern-search" placeholder="Search" aria-label="Search" />
                    <div id="searchResults" class="search-results position-absolute bg-white border rounded shadow-lg" style="display: none; z-index: 1050;"></div>
                </div>
                <div>
                    <% if (lang === 'en') { %>
                        <a href="/ru/unsolved" class="language-switch">EN</a>
                    <% } else { %>
                        <a href="/en/unsolved" class="language-switch">RU</a>
                    <% } %>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="unsolved-list">
        <h1><%= __('unsolved.title') %></h1>
        
        <!-- Add statistics section -->
        <div class="statistics-section mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <div>
                            <h5 class="card-title mb-0"><%= __('unsolved.overallProgress') %></h5>
                            <p class="text-muted mb-2"><%= __('unsolved.totalSolved') %>: <%= totalUniqueSolutions %>/<%= totalProblems %></p>
                        </div>
                        <div class="progress-container" style="width: 200px;">
                            <div class="progress-bar-both" style="width: <%= (currentLangSolutions / totalProblems * 100).toFixed(1) %>%"></div>
                            <div class="progress-bar-other" style="width: <%= ((totalUniqueSolutions - currentLangSolutions) / totalProblems * 100).toFixed(1) %>%"></div>
                        </div>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <span><%= lang.toUpperCase() %> <%= __('unsolved.solutions') %>:</span>
                                <strong><%= currentLangSolutions %></strong>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <span><%= (lang === 'en' ? 'RU' : 'EN') %> <%= __('unsolved.solutions') %>:</span>
                                <strong><%= otherLangSolutions %></strong>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <span><%= __('unsolved.uniqueSolutions') %>:</span>
                                <strong><%= totalUniqueSolutions %></strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <% 
        let currentChapter = null;
        let currentSection = null;
        let sectionProblems = [];
        
        unsolved.forEach(problem => {
            if (currentChapter !== problem.chapter) {
                // Display the last section's progress before starting a new chapter
                if (sectionProblems && sectionProblems.length > 0) { %>
                    <div class="section-header">
                        <h3 class="section-title"><%= __('unsolved.section') %> <%= sectionProblems[0].chapterNum %>.<%= sectionProblems[0].sectionNum %>: <%= currentSection %></h3>
                        <div class="pie-chart-container">
                            <canvas id="pieChart-<%= sectionProblems[0].chapterNum %>-<%= sectionProblems[0].sectionNum %>"></canvas>
                        </div>
                        <div class="progress-container">
                            <% 
                            const totalInSection = sectionProblems[0].maximum;
                            const unsolvedCount = sectionProblems.length;
                            const otherLangOnlyCount = sectionProblems.filter(p => p.existsInOtherLang).length;
                            const solvedInBothCount = totalInSection - unsolvedCount - otherLangOnlyCount;
                            const solvedInCurrentOnly = unsolvedCount - otherLangOnlyCount;
                            %>
                            <div class="progress-bar-current" style="width: <%= ((totalInSection - unsolvedCount) / totalInSection * 100) %>%"></div>
                            <div class="progress-bar-other" style="width: <%= (otherLangOnlyCount / totalInSection * 100) %>%"></div>
                        </div>
                        <span class="completion-text">
                            <%= (totalInSection - unsolvedCount) %>/<%= totalInSection %>
                        </span>
                    </div>
                    <div class="problem-links mb-4">
                        <% sectionProblems.forEach(prob => { %>
                            <a href="/<%= prob.existsInOtherLang ? (lang === 'en' ? 'ru' : 'en') : lang %>/<%= prob.existsInOtherLang ? '' : 'upload#' %><%= prob.problem %>" 
                               class="problem-link <%= prob.existsInOtherLang ? 'exists-other-lang' : '' %>"
                               title="<%= prob.existsInOtherLang ? __('unsolved.existsInOtherLang') : '' %>">
                                <%= prob.problem %>
                            </a>
                        <% }); %>
                    </div>
                <% }
                currentChapter = problem.chapter;
                currentSection = null;
                sectionProblems = []; %>
                <h2 class="chapter-title"><%= __('unsolved.chapter') %> <%= problem.chapterNum %>: <%= problem.chapter %></h2>
            <% }
            
            if (currentSection !== problem.section) {
                // Display previous section's progress and problems before starting new section
                if (sectionProblems && sectionProblems.length > 0) { %>
                    <div class="section-header">
                        <h3 class="section-title"><%= __('unsolved.section') %> <%= sectionProblems[0].chapterNum %>.<%= sectionProblems[0].sectionNum %>: <%= currentSection %></h3>
                        <div class="pie-chart-container">
                            <canvas id="pieChart-<%= sectionProblems[0].chapterNum %>-<%= sectionProblems[0].sectionNum %>"></canvas>
                        </div>
                        <div class="progress-container">
                            <% 
                            const totalInSection = sectionProblems[0].maximum;
                            const unsolvedCount = sectionProblems.length;
                            const otherLangOnlyCount = sectionProblems.filter(p => p.existsInOtherLang).length;
                            const solvedInBothCount = totalInSection - unsolvedCount - otherLangOnlyCount;
                            const solvedInCurrentOnly = unsolvedCount - otherLangOnlyCount;
                            %>
                            <div class="progress-bar-current" style="width: <%= ((totalInSection - unsolvedCount) / totalInSection * 100) %>%"></div>
                            <div class="progress-bar-other" style="width: <%= (otherLangOnlyCount / totalInSection * 100) %>%"></div>
                        </div>
                        <span class="completion-text">
                            <%= (totalInSection - unsolvedCount) %>/<%= totalInSection %>
                        </span>
                    </div>
                    <div class="problem-links mb-4">
                        <% sectionProblems.forEach(prob => { %>
                            <a href="/<%= prob.existsInOtherLang ? (lang === 'en' ? 'ru' : 'en') : lang %>/<%= prob.existsInOtherLang ? '' : 'upload#' %><%= prob.problem %>" 
                               class="problem-link <%= prob.existsInOtherLang ? 'exists-other-lang' : '' %>"
                               title="<%= prob.existsInOtherLang ? __('unsolved.existsInOtherLang') : '' %>">
                                <%= prob.problem %>
                            </a>
                        <% }); %>
                    </div>
                <% }
                currentSection = problem.section;
                sectionProblems = [problem];
            } else {
                sectionProblems.push(problem);
            }
        }); 
        
        // Display the last section's progress and problems
        if (sectionProblems && sectionProblems.length > 0) { %>
            <div class="section-header">
                <h3 class="section-title"><%= __('unsolved.section') %> <%= sectionProblems[0].chapterNum %>.<%= sectionProblems[0].sectionNum %>: <%= currentSection %></h3>
                <div class="pie-chart-container">
                    <canvas id="pieChart-<%= sectionProblems[0].chapterNum %>-<%= sectionProblems[0].sectionNum %>"></canvas>
                </div>
                <div class="progress-container">
                    <% 
                    const totalInSection = sectionProblems[0].maximum;
                    const unsolvedCount = sectionProblems.length;
                    const otherLangOnlyCount = sectionProblems.filter(p => p.existsInOtherLang).length;
                    const solvedInBothCount = totalInSection - unsolvedCount - otherLangOnlyCount;
                    const solvedInCurrentOnly = unsolvedCount - otherLangOnlyCount;
                    %>
                    <div class="progress-bar-current" style="width: <%= ((totalInSection - unsolvedCount) / totalInSection * 100) %>%"></div>
                    <div class="progress-bar-other" style="width: <%= (otherLangOnlyCount / totalInSection * 100) %>%"></div>
                </div>
                <span class="completion-text">
                    <%= (totalInSection - unsolvedCount) %>/<%= totalInSection %>
                </span>
            </div>
            <div class="problem-links mb-4">
                <% sectionProblems.forEach(prob => { %>
                    <a href="/<%= prob.existsInOtherLang ? (lang === 'en' ? 'ru' : 'en') : lang %>/<%= prob.existsInOtherLang ? '' : 'upload#' %><%= prob.problem %>" 
                       class="problem-link <%= prob.existsInOtherLang ? 'exists-other-lang' : '' %>"
                       title="<%= prob.existsInOtherLang ? __('unsolved.existsInOtherLang') : '' %>">
                        <%= prob.problem %>
                    </a>
                <% }); %>
            </div>
        <% } %>
    </div>

    <!-- Footer -->
    <footer class="footer-modern py-4 mt-5">
        <div class="footer-container">
            <div class="row align-items-center text-center text-md-start">
                <div class="col-md-6 mb-4 mb-md-0">
                    <a href="/<%= lang %>/" class="d-inline-flex align-items-center text-decoration-none mb-3">
                        <img src="/img/logo_main.svg" alt="<%= __('title') %> Logo" style="height: 40px;" class="me-2" />
                        <span class="fw-bold h5 mb-0 text-white"><%= __('title') %></span>
                    </a>
                    <p class="mb-0">
                        <small>
                            © <strong>Savchenko Solutions</strong>, 2023-2025<br />
                            All solutions are contributed by their respective authors and are based on original textbook content, which remains the property of the textbook authors.
                        </small>
                    </p>
                </div>
                <div class="col-md-6 text-md-end">
                    <p class="small mb-2">
                        Unless otherwise noted, solutions are provided under the <strong>CC BY-SA 4.0</strong> license.
                        Commercial use of any material requires written permission.
                    </p>
                    <p class="small mb-0">
                        Contact: <a href="mailto:aliaksandr@melnichenka.com" class="text-decoration-none text-white">aliaksandr@melnichenka.com</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Search functionality
            const searchInput = document.getElementById("searchInput");
            const searchResults = document.getElementById("searchResults");

            searchInput.placeholder = "<%= __('unsolved.searchPlaceholder') %>";

            searchInput.addEventListener("input", async () => {
                const query = searchInput.value.trim();

                if (query.length === 0) {
                    searchResults.style.display = "none";
                    searchResults.innerHTML = "";
                    return;
                }

                try {
                    const response = await fetch(`/search?q=${encodeURIComponent(query)}`);
                    const data = await response.json();

                    if (data.results.length > 0) {
                        const limitedResults = data.results.slice(0, 5);
                        searchResults.innerHTML = `
                            <ul class="list-unstyled mb-0 p-2">
                                ${limitedResults.map(result => `
                                    <li class="py-2 px-3 mb-1 rounded hover-bg-light">
                                        <a href="${result.relativePath}" class="d-block text-dark text-decoration-none">
                                            <span class="fw-bold">${result.name}</span> - 
                                            <span class="text-muted small">${result.snippet}</span>
                                        </a>
                                    </li>
                                `).join('')}
                            </ul>
                        `;
                        searchResults.style.display = "block";
                    } else {
                        searchResults.innerHTML = `
                            <ul class="list-unstyled mb-0 p-2">
                                <li class="py-2 px-3 text-muted"><%= __('unsolved.noResults') %></li>
                            </ul>
                        `;
                        searchResults.style.display = "block";
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            });

            // Close search results when clicking outside
            document.addEventListener('click', (e) => {
                if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                    searchResults.style.display = "none";
                }
            });
        });

        function createPieChart(elementId, solved, total) {
            const ctx = document.getElementById(elementId).getContext('2d');
            const problemName = elementId.replace('pieChart-', '');
            
            // Calculate the number of problems solved in current and other language
            const currentLangSolved = solved;
            const otherLangOnly = Array.from(document.querySelectorAll(`#${elementId}`).closest('.section-header').nextElementSibling.querySelectorAll('.problem-link.exists-other-lang')).length;
            const unsolved = total - currentLangSolved - otherLangOnly;

            new Chart(ctx, {
                type: 'pie',
                data: {
                    datasets: [{
                        data: [currentLangSolved, otherLangOnly, unsolved],
                        backgroundColor: ['#4CAF50', '#f44336', '#f0f0f0'], // Green, Red, Gray
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            enabled: true,
                            callbacks: {
                                label: function(context) {
                                    const labels = ['Current Language', 'Other Language Only', 'Unsolved'];
                                    return `${labels[context.dataIndex]}: ${context.raw}`;
                                }
                            }
                        }
                    }
                }
            });
        }

        // Initialize all pie charts
        document.querySelectorAll('.pie-chart-container canvas').forEach(canvas => {
            const [_, chapter, section] = canvas.id.split('-');
            const container = canvas.closest('.section-header');
            const completionText = container.querySelector('.completion-text').textContent.split('/');
            const solved = parseInt(completionText[0]);
            const total = parseInt(completionText[1]);
            createPieChart(canvas.id, solved, total);
        });
    </script>
</body>
</html>
